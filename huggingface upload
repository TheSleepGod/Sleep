import os
import logging
from huggingface_hub import HfApi, HfFolder, create_repo, login
from huggingface_hub.utils import HfHubHTTPError, RepositoryNotFoundError

logging.basicConfig(level=logging.INFO, format='[%(levelname)s] %(message)s')
logger = logging.getLogger(__name__)

def cosmic_uploader(token, repo_id, file_path, repo_filename, repo_type="model", workers=4):
    try:
        if not os.path.exists(file_path):
            raise FileNotFoundError(f"文件不存在: {file_path}")
        login(token=token)
        logger.info("✅ 星门认证通过")

        try:
            create_repo(
                repo_id=repo_id,
                repo_type=repo_type,
                exist_ok=True,
                token=token
            )
        except HfHubHTTPError as e:
            if e.status_code != 409: 
                raise

        api = HfApi()
        logger.info(f"🚀 启动曲速引擎（{workers}线程）...")
        
        api.upload_file(
            path_or_fileobj=file_path,
            repo_id=repo_id,
            repo_type=repo_type,
            path_in_repo=repo_filename,
            token=token,
            # 新版SDK支持多线程上传
            multi_commits=True,
            num_threads=workers,
        )

        logger.info(f"🎉 文件已抵达星门 {repo_id}!")
        
    except Exception as e:
        logger.error(f"💥 遭遇星际风暴: {str(e)}")
        exit(1)

if __name__ == "__main__":
    token = os.getenv("HF_TOKEN", "hf_yourtoken")  # 优先使用环境变量
    
    cosmic_uploader(
        token=token,
        repo_id="E2RAG/8B-UPDATE",
        file_path="/home/.../pytorch_model.bin",  # 你的文件路径
        repo_filename="pytorch_model.bin",
        repo_type="model",
        workers=8  # 根据网络调整
    )
